{"version":3,"file":"static/js/186.dd9605bb.chunk.js","mappings":"8LAIMA,EAAM,IAAIC,EAAAA,EA8BhB,UA5BgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRP,EAAIQ,kBAAkBN,GAASO,MAAK,SAAAC,GAClCJ,EAAWI,EAAIC,QAChB,GACF,GAAE,CAACT,KAEF,4BACE,qCACA,wBACGG,EAAQO,OACPP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADC,KAOZ,wEAKT,C,4EC9BKG,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAW,gCAEIrB,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAwBlB,OAxBkBA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,eAAAA,MACnB,WACE,OAAOsB,MAAM,GAAD,OAAID,EAAJ,iBAA6BL,GAASR,MAAK,SAAAC,GAAG,OAAIA,EAAIc,MAAR,GAC3D,2BAED,SAAWC,GACT,OAAOF,MAAM,GAAD,OAAID,EAAJ,wBAA4BG,GAASR,GAASR,MAAK,SAAAC,GAAG,OAChEA,EAAIc,MAD4D,GAGnE,kCAED,SAAkBV,GAChB,OAAOS,MAAM,GAAD,OAAID,EAAJ,iBAAqBR,GAAMG,GAASR,MAAK,SAAAC,GAAG,OAAIA,EAAIc,MAAR,GACzD,+BACD,SAAeV,GACb,OAAOS,MAAM,GAAD,OAAID,EAAJ,iBAAqBR,EAArB,YAAmCG,GAASR,MAAK,SAAAC,GAAG,OAC9DA,EAAIc,MAD0D,GAGjE,kCAED,SAAkBV,GAChB,OAAOS,MAAM,GAAD,OAAID,EAAJ,iBAAqBR,EAArB,YAAmCG,GAASR,MAAK,SAAAC,GAAG,OAC9DA,EAAIc,MAD0D,GAGjE,OAxBkBvB,E","sources":["components/Reviews/Reviews.jsx","servises/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport moviesAPI from '../../servises/api';\n\nconst api = new moviesAPI();\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    api.fetchMovieReviews(movieId).then(res => {\n      setReviews(res.results);\n    });\n  }, [movieId]);\n  return (\n    <div>\n      <p>Reviews:</p>\n      <ul>\n        {reviews.length ? (\n          reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>{author}</p>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n","// import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2M0OTkzNGQ4ZDM3ZTliZjNmZmQ3Zjg0YjlkMDY4ZSIsInN1YiI6IjY0OGQ3YzUwMjYzNDYyMDBhZTFiODE4MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vRJ_6rq3L_MOfNvPFqWJP76Cn7YU09oWq_LdiL4_f2c',\n  },\n};\n\nconst base_URL = 'https://api.themoviedb.org/3/';\n\nexport default class moviesAPI {\n  fetchTopList() {\n    return fetch(`${base_URL}movie/popular`, options).then(res => res.json());\n  }\n\n  fetchMovie(param) {\n    return fetch(`${base_URL}search/movie?${param}`, options).then(res =>\n      res.json()\n    );\n  }\n\n  fetchMovieDetails(id) {\n    return fetch(`${base_URL}movie/${id}`, options).then(res => res.json());\n  }\n  fetchMovieCast(id) {\n    return fetch(`${base_URL}movie/${id}/credits`, options).then(res =>\n      res.json()\n    );\n  }\n\n  fetchMovieReviews(id) {\n    return fetch(`${base_URL}movie/${id}/reviews`, options).then(res =>\n      res.json()\n    );\n  }\n}\n"],"names":["api","moviesAPI","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","res","results","length","map","id","author","content","options","method","headers","accept","Authorization","base_URL","fetch","json","param"],"sourceRoot":""}