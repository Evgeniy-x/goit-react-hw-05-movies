{"version":3,"file":"static/js/764.fb43668f.chunk.js","mappings":"sMAIMA,EAAM,IAAIC,EAAAA,EAgEhB,UA9De,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAO,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,GACvCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHT,GAGLH,EACGa,WAAWV,GACXW,MAAK,SAAAC,GACJR,EAAUQ,EAAIC,QACf,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAEf,GAAE,IAoBH,OACE,iCACE,kBAAMG,SApBa,SAAAC,GACrBA,EAAIC,iBAEJvB,EACGa,WAAWV,GACXW,MAAK,SAAAC,GACJR,EAAUQ,EAAIC,QACf,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,EAWG,WACE,kBAAOM,KAAK,OAAOC,MAAOjB,EAASkB,SAVf,SAAAJ,GACxB,GAAyB,KAArBA,EAAIK,OAAOF,MACb,OAAOrB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEwB,MAAON,EAAIK,OAAOF,OACrC,KAOK,mBAAQD,KAAK,SAAb,wBAGF,0BACE,wBACGlB,EAAOuB,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMxB,GAAlC,SACGoB,KAFIC,EAMZ,UAKV,C,4EChEKI,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAW,gCAEIvC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAwBlB,OAxBkBA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,eAAAA,MACnB,WACE,OAAOwC,MAAM,GAAD,OAAID,EAAJ,iBAA6BL,GAASrB,MAAK,SAAAC,GAAG,OAAIA,EAAI2B,MAAR,GAC3D,2BAED,SAAWC,GACT,OAAOF,MAAM,GAAD,OAAID,EAAJ,wBAA4BG,GAASR,GAASrB,MAAK,SAAAC,GAAG,OAChEA,EAAI2B,MAD4D,GAGnE,kCAED,SAAkBX,GAChB,OAAOU,MAAM,GAAD,OAAID,EAAJ,iBAAqBT,GAAMI,GAASrB,MAAK,SAAAC,GAAG,OAAIA,EAAI2B,MAAR,GACzD,+BACD,SAAeX,GACb,OAAOU,MAAM,GAAD,OAAID,EAAJ,iBAAqBT,EAArB,YAAmCI,GAASrB,MAAK,SAAAC,GAAG,OAC9DA,EAAI2B,MAD0D,GAGjE,kCAED,SAAkBX,GAChB,OAAOU,MAAM,GAAD,OAAID,EAAJ,iBAAqBT,EAArB,YAAmCI,GAASrB,MAAK,SAAAC,GAAG,OAC9DA,EAAI2B,MAD0D,GAGjE,OAxBkBzC,E","sources":["pages/Movies.js","servises/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport moviesAPI from '../servises/api';\n\nconst api = new moviesAPI();\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const movieId = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchParams) {\n      return;\n    }\n    api\n      .fetchMovie(searchParams)\n      .then(res => {\n        setMovies(res.results);\n      })\n      .catch(erorr => console.log(erorr));\n    // eslint-disable-next-line\n  }, []);\n\n  const onSubmitSearch = evt => {\n    evt.preventDefault();\n\n    api\n      .fetchMovie(searchParams)\n      .then(res => {\n        setMovies(res.results);\n      })\n      .catch(erorr => console.log(erorr));\n  };\n\n  const updateQueryString = evt => {\n    if (evt.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: evt.target.value });\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmitSearch}>\n        <input type=\"text\" value={movieId} onChange={updateQueryString} />\n\n        <button type=\"Submit\">Search</button>\n      </form>\n\n      <div>\n        <ul>\n          {movies.map(({ title, id }) => {\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","// import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2M0OTkzNGQ4ZDM3ZTliZjNmZmQ3Zjg0YjlkMDY4ZSIsInN1YiI6IjY0OGQ3YzUwMjYzNDYyMDBhZTFiODE4MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vRJ_6rq3L_MOfNvPFqWJP76Cn7YU09oWq_LdiL4_f2c',\n  },\n};\n\nconst base_URL = 'https://api.themoviedb.org/3/';\n\nexport default class moviesAPI {\n  fetchTopList() {\n    return fetch(`${base_URL}movie/popular`, options).then(res => res.json());\n  }\n\n  fetchMovie(param) {\n    return fetch(`${base_URL}search/movie?${param}`, options).then(res =>\n      res.json()\n    );\n  }\n\n  fetchMovieDetails(id) {\n    return fetch(`${base_URL}movie/${id}`, options).then(res => res.json());\n  }\n  fetchMovieCast(id) {\n    return fetch(`${base_URL}movie/${id}/credits`, options).then(res =>\n      res.json()\n    );\n  }\n\n  fetchMovieReviews(id) {\n    return fetch(`${base_URL}movie/${id}/reviews`, options).then(res =>\n      res.json()\n    );\n  }\n}\n"],"names":["api","moviesAPI","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","movieId","get","location","useLocation","useEffect","fetchMovie","then","res","results","catch","erorr","console","log","onSubmit","evt","preventDefault","type","value","onChange","target","query","map","title","id","to","state","from","options","method","headers","accept","Authorization","base_URL","fetch","json","param"],"sourceRoot":""}