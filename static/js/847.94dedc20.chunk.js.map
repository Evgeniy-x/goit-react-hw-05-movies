{"version":3,"file":"static/js/847.94dedc20.chunk.js","mappings":"sMAIMA,EAAM,IAAIC,EAAAA,EAoDhB,UAlDqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAE3DC,EAAAA,EAAAA,YAAU,WACRb,EAAIc,kBAAkBZ,GAASa,MAAK,SAAAC,GAClCV,EAASU,EACV,GACF,GAAE,CAACd,IACJ,IAAQe,EAAyDZ,EAAzDY,MAAOC,EAAkDb,EAAlDa,cAAeC,EAAmCd,EAAnCc,aAAcC,EAAqBf,EAArBe,SAAUC,EAAWhB,EAAXgB,OACtD,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIb,EAAoBc,QAA9B,sBACA,wBAAKN,KACL,gBACEO,IACEN,GAAa,8CAC0BA,GAEzCO,IAAKR,EACLS,MAAO,CAAEC,MAAO,YAElB,4CAAkBR,MAClB,sCACW,kBACRC,MAEH,+BACGC,QADH,IACGA,OADH,EACGA,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACX,wBAAcA,GAALD,EADE,OAKf,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,4ECpDKC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAIAC,EAAW,gCAEIrC,EAAAA,WAAAA,SAAAA,KAAAA,EAAAA,EAAAA,GAAAA,KAAAA,EAAAA,CAwBlB,OAxBkBA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,eAAAA,MACnB,WACE,OAAOsC,MAAM,GAAD,OAAID,EAAJ,iBAA6BL,GAASlB,MAAK,SAAAC,GAAG,OAAIA,EAAIwB,MAAR,GAC3D,2BAED,SAAWC,GACT,OAAOF,MAAM,GAAD,OAAID,EAAJ,wBAA4BG,GAASR,GAASlB,MAAK,SAAAC,GAAG,OAChEA,EAAIwB,MAD4D,GAGnE,kCAED,SAAkBX,GAChB,OAAOU,MAAM,GAAD,OAAID,EAAJ,iBAAqBT,GAAMI,GAASlB,MAAK,SAAAC,GAAG,OAAIA,EAAIwB,MAAR,GACzD,+BACD,SAAeX,GACb,OAAOU,MAAM,GAAD,OAAID,EAAJ,iBAAqBT,EAArB,YAAmCI,GAASlB,MAAK,SAAAC,GAAG,OAC9DA,EAAIwB,MAD0D,GAGjE,kCAED,SAAkBX,GAChB,OAAOU,MAAM,GAAD,OAAID,EAAJ,iBAAqBT,EAArB,YAAmCI,GAASlB,MAAK,SAAAC,GAAG,OAC9DA,EAAIwB,MAD0D,GAGjE,OAxBkBvC,E","sources":["pages/MovieDetails.js","servises/api.js"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\nimport moviesAPI from '../servises/api';\n\nconst api = new moviesAPI();\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    api.fetchMovieDetails(movieId).then(res => {\n      setMovie(res);\n    });\n  }, [movieId]);\n  const { title, backdrop_path, vote_average, overview, genres } = movie;\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <h2>{title}</h2>\n      <img\n        src={\n          backdrop_path &&\n          `https://image.tmdb.org/t/p/original/${backdrop_path}`\n        }\n        alt={title}\n        style={{ width: '400px' }}\n      ></img>\n      <p>{`Popularit: ${vote_average}`}</p>\n      <p>\n        Overview <br />\n        {overview}\n      </p>\n      <ul>\n        {genres?.map(({ id, name }) => (\n          <li key={id}>{name}</li>\n        ))}\n      </ul>\n\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","// import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2N2M0OTkzNGQ4ZDM3ZTliZjNmZmQ3Zjg0YjlkMDY4ZSIsInN1YiI6IjY0OGQ3YzUwMjYzNDYyMDBhZTFiODE4MyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.vRJ_6rq3L_MOfNvPFqWJP76Cn7YU09oWq_LdiL4_f2c',\n  },\n};\n\nconst base_URL = 'https://api.themoviedb.org/3/';\n\nexport default class moviesAPI {\n  fetchTopList() {\n    return fetch(`${base_URL}movie/popular`, options).then(res => res.json());\n  }\n\n  fetchMovie(param) {\n    return fetch(`${base_URL}search/movie?${param}`, options).then(res =>\n      res.json()\n    );\n  }\n\n  fetchMovieDetails(id) {\n    return fetch(`${base_URL}movie/${id}`, options).then(res => res.json());\n  }\n  fetchMovieCast(id) {\n    return fetch(`${base_URL}movie/${id}/credits`, options).then(res =>\n      res.json()\n    );\n  }\n\n  fetchMovieReviews(id) {\n    return fetch(`${base_URL}movie/${id}/reviews`, options).then(res =>\n      res.json()\n    );\n  }\n}\n"],"names":["api","moviesAPI","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","then","res","title","backdrop_path","vote_average","overview","genres","to","current","src","alt","style","width","map","id","name","Suspense","fallback","options","method","headers","accept","Authorization","base_URL","fetch","json","param"],"sourceRoot":""}